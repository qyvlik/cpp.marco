#include <iostream>
using namespace std;

#define TEMPLATE_PARAMETER_1(_TYPE) _TYPE T1
#define TEMPLATE_PARAMETER_2(_TYPE) TEMPLATE_PARAMETER_1(_TYPE), _TYPE T2
#define TEMPLATE_PARAMETER_3(_TYPE) TEMPLATE_PARAMETER_2(_TYPE), _TYPE T3
#define TEMPLATE_PARAMETER_4(_TYPE) TEMPLATE_PARAMETER_3(_TYPE), _TYPE T4
#define TEMPLATE_PARAMETER_5(_TYPE) TEMPLATE_PARAMETER_4(_TYPE), _TYPE T5
#define TEMPLATE_PARAMETER_6(_TYPE) TEMPLATE_PARAMETER_5(_TYPE), _TYPE T6
#define TEMPLATE_PARAMETER_7(_TYPE) TEMPLATE_PARAMETER_6(_TYPE), _TYPE T7
#define TEMPLATE_PARAMETER_8(_TYPE) TEMPLATE_PARAMETER_7(_TYPE), _TYPE T8
#define TEMPLATE_PARAMETER_9(_TYPE) TEMPLATE_PARAMETER_8(_TYPE), _TYPE T9

#define FUNCTION_PARAMETER_1 T1 pT1
#define FUNCTION_PARAMETER_2 FUNCTION_PARAMETER_1, T2 pT2
#define FUNCTION_PARAMETER_3 FUNCTION_PARAMETER_2, T3 pT3
#define FUNCTION_PARAMETER_4 FUNCTION_PARAMETER_3, T4 pT4
#define FUNCTION_PARAMETER_5 FUNCTION_PARAMETER_4, T5 pT5
#define FUNCTION_PARAMETER_6 FUNCTION_PARAMETER_5, T6 pT6
#define FUNCTION_PARAMETER_7 FUNCTION_PARAMETER_6, T7 pT7
#define FUNCTION_PARAMETER_8 FUNCTION_PARAMETER_7, T8 pT8
#define FUNCTION_PARAMETER_9 FUNCTION_PARAMETER_8, T9 pT9

#define FUNCTION_ARGUMENT_1 pT1
#define FUNCTION_ARGUMENT_2 FUNCTION_ARGUMENT_1, pT2
#define FUNCTION_ARGUMENT_3 FUNCTION_ARGUMENT_2, pT3
#define FUNCTION_ARGUMENT_4 FUNCTION_ARGUMENT_3, pT4
#define FUNCTION_ARGUMENT_5 FUNCTION_ARGUMENT_4, pT5
#define FUNCTION_ARGUMENT_6 FUNCTION_ARGUMENT_5, pT6
#define FUNCTION_ARGUMENT_7 FUNCTION_ARGUMENT_6, pT7
#define FUNCTION_ARGUMENT_8 FUNCTION_ARGUMENT_7, pT8
#define FUNCTION_ARGUMENT_9 FUNCTION_ARGUMENT_8, pT9

#define TEMPLATE_PARAMETER_LIST(_NUMBER) TEMPLATE_PARAMETER_##_NUMBER(typename)

#define TEMPLATE_TYPE_LIST(_NUMBER) TEMPLATE_PARAMETER_##_NUMBER()

#define FUNCTION_PARAMETER_LIST(_NUMBER) FUNCTION_PARAMETER_##_NUMBER

#define FUNCTION_ARGUMENT_LIST(_NUMBER) FUNCTION_ARGUMENT_##_NUMBER

/*
TEMPLATE_PARAMETER_LIST(2)
typename T1, typename T2  

TEMPLATE_TYPE_LIST(2)
T1,T2     

FUNCTION_PARAMETER_LIST(2)
T1 pT1, T2 pT2

FUNCTION_ARGUMENT_LIST(3)
pT1, pT2, pT3
*/

#define MACRO_TO_STRING(_marco) #_marco

#define DEBUG_MACRO(_marco) { \
    char  macro_string [] = MACRO_TO_STRING( (_marco) ); \
    int last =  sizeof( MACRO_TO_STRING( (_marco) )) -2; \
    macro_string[0] = ' '; \
    macro_string[last] = ' '; \
    std::cout << macro_string; \
}

#define DECLARE_PRIVATE(_CLASSNAME) \
    class _CLASSNAME##Private { }

int main(int, char**)
{
    DEBUG_MACRO(
        /* this block code never exec. */
        /* you can use the \n to new aline. */
        DECLARE_PRIVATE(NONE); \n
        int a; \n
        int b; \n
        TEMPLATE_PARAMETER_LIST(2) \n
        TEMPLATE_TYPE_LIST(2)\n
        FUNCTION_PARAMETER_LIST(2)\n
        FUNCTION_ARGUMENT_LIST(3)\n
    );
    return 0;
}